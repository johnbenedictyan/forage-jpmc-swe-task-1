From ef5ac25ff8a4bbc526eeab9cab1ca0484919df72 Mon Sep 17 00:00:00 2001
From: John Benedict Yan <johnbenedictyan@gmail.com>
Date: Wed, 17 Jul 2024 16:11:59 +0800
Subject: [PATCH] =?UTF-8?q?process=20the=20data=20feed=20of=20stock=20A=20?=
 =?UTF-8?q?and=20stock=20B=E2=80=99s=20price=20to=20enable=20us=20to=20ana?=
 =?UTF-8?q?lyse=20when=20trading=20for=20the=20stock=20should=20occur.?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 client3.py     | 30 ++++++++++------
 client_test.py | 95 ++++++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 100 insertions(+), 25 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..00a80cd 100644
--- a/client3.py
+++ b/client3.py
@@ -30,30 +30,40 @@ N = 500
 
 
 def getDataPoint(quote):
-    """ Produce all the needed values to generate a datapoint """
+    """Produce all the needed values to generate a datapoint"""
     """ ------------- Update this function ------------- """
-    stock = quote['stock']
-    bid_price = float(quote['top_bid']['price'])
-    ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    stock = quote["stock"]
+    bid_price = float(quote["top_bid"]["price"])
+    ask_price = float(quote["top_ask"]["price"])
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
-    """ Get ratio of price_a and price_b """
+    """Get ratio of price_a and price_b"""
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return
+    return price_a / price_b
 
 
 # Main
 if __name__ == "__main__":
     # Query the price once every N seconds.
     for _ in iter(range(N)):
-        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+        quotes = json.loads(
+            urllib.request.urlopen(QUERY.format(random.random())).read()
+        )
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
+
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+            prices[stock] = price
+            print(
+                "Quoted %s at (bid:%s, ask:%s, price:%s)"
+                % (stock, bid_price, ask_price, price)
+            )
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..69234dd 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,25 +1,90 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {
+                "top_ask": {"price": 121.2, "size": 36},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 120.48, "size": 109},
+                "id": "0.109974697771",
+                "stock": "ABC",
+            },
+            {
+                "top_ask": {"price": 121.68, "size": 4},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 117.87, "size": 81},
+                "id": "0.109974697771",
+                "stock": "DEF",
+            },
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote["stock"],
+                    quote["top_bid"]["price"],
+                    quote["top_ask"]["price"],
+                    (quote["top_bid"]["price"] + quote["top_ask"]["price"]) / 2,
+                ),
+            )
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {
+                "top_ask": {"price": 119.2, "size": 36},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 120.48, "size": 109},
+                "id": "0.109974697771",
+                "stock": "ABC",
+            },
+            {
+                "top_ask": {"price": 121.68, "size": 4},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 117.87, "size": 81},
+                "id": "0.109974697771",
+                "stock": "DEF",
+            },
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote["stock"],
+                    quote["top_bid"]["price"],
+                    quote["top_ask"]["price"],
+                    (quote["top_bid"]["price"] + quote["top_ask"]["price"]) / 2,
+                ),
+            )
 
+    """ ------------ Add more unit tests ------------ """
+    def test_getRatio_calculateRatio(self):
+        quotes = [
+            {
+                "top_ask": {"price": 121.2, "size": 36},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 120.48, "size": 109},
+                "id": "0.109974697771",
+                "stock": "ABC",
+            },
+            {
+                "top_ask": {"price": 121.68, "size": 4},
+                "timestamp": "2019-02-11 22:06:30.572453",
+                "top_bid": {"price": 117.87, "size": 81},
+                "id": "0.109974697771",
+                "stock": "DEF",
+            },
+        ]
 
-  """ ------------ Add more unit tests ------------ """
+        priceABC = getDataPoint(quotes[0])[3]
+        priceDEF = getDataPoint(quotes[1])[3]
 
+        self.assertEqual(getRatio(priceABC, priceDEF), priceABC / priceDEF)
 
 
-if __name__ == '__main__':
+if __name__ == "__main__":
     unittest.main()
-- 
2.39.2 (Apple Git-143)

